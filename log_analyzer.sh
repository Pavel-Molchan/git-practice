#!/bin/bash

# === Шаг 1: Проверка входных аргументов ===
# Проверяем, что скрипту передали ровно один аргумент (имя файла)
if [ "$#" -ne 1 ]; then
    echo "Ошибка: Неверное количество аргументов."
    echo "Пример использования: $0 <путь_к_лог_файлу>"
    exit 1
fi

LOG_FILE=$1 # Присваиваем первому аргументу ($1) понятное имя

# Проверяем, что файл, который нам передали, существует
if [ ! -f "$LOG_FILE" ]; then
    echo "Ошибка: Файл '$LOG_FILE' не найден."
    exit 1
fi

# === Шаг 2: Анализ лог-файла ===
# Считаем общее количество ошибок, сохраняя результат в переменную
ERROR_COUNT=$(grep -c "ERROR" "$LOG_FILE")

# Получаем список уникальных IP-адресов
# `grep -o` извлекает только совпавшую часть, `[0-9]{1,3}\.`... — это регулярное выражение для поиска IP
UNIQUE_IPS=$(grep -o -E "([0-9]{1,3}\.){3}[0-9]{1,3}" "$LOG_FILE" | sort | uniq)

# === Шаг 3: Вывод отчёта ===
echo "=========================================="
echo "Отчёт по анализу лог-файла: $LOG_FILE"
echo "=========================================="
echo ""
echo "Всего найдено ошибок (ERROR): $ERROR_COUNT"
echo ""
echo "Уникальные IP-адреса, найденные в логе:"
# `-e` в echo позволяет интерпретировать \n как перенос строки
echo -e "$UNIQUE_IPS"
echo ""
echo "=========================================="